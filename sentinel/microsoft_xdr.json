{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "author": "Microsoft - support@microsoft.com",
        "comments": "Solution template for Microsoft Defender XDR"
    },
    "parameters": {
        "location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
            }
        },
        "workspace-location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
            }
        },
        "workspace": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
            }
        },
        "workbook1-name": {
            "type": "string",
            "defaultValue": "Microsoft Defender XDR MDOWorkbook",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        },
        "workbook2-name": {
            "type": "string",
            "defaultValue": "Microsoft Defender For EndPoint",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        },
        "workbook3-name": {
            "type": "string",
            "defaultValue": "Microsoft Defender For Identity",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        }
    },
    "variables": {
        "email": "support@microsoft.com",
        "_email": "[variables('email')]",
        "_solutionName": "Microsoft Defender XDR",
        "_solutionVersion": "3.0.2",
        "solutionId": "azuresentinel.azure-sentinel-solution-microsoft365defender",
        "_solutionId": "[variables('solutionId')]",
        "uiConfigId1": "MicrosoftThreatProtection",
        "_uiConfigId1": "[variables('uiConfigId1')]",
        "dataConnectorContentId1": "MicrosoftThreatProtection",
        "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
        "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "_dataConnectorId1": "[variables('dataConnectorId1')]",
        "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
        "dataConnectorVersion1": "1.0.0",
        "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
        "analyticRuleObject1": {
            "analyticRuleVersion1": "1.0.1",
            "_analyticRulecontentId1": "6c3a1258-bcdd-4fcd-b753-1a9bc826ce12",
            "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6c3a1258-bcdd-4fcd-b753-1a9bc826ce12')]",
            "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6c3a1258-bcdd-4fcd-b753-1a9bc826ce12')))]",
            "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','6c3a1258-bcdd-4fcd-b753-1a9bc826ce12','-', '1.0.1')))]"
        },
        "analyticRuleObject2": {
            "analyticRuleVersion2": "1.0.1",
            "_analyticRulecontentId2": "53e936c6-6c30-4d12-8343-b8a0456e8429",
            "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '53e936c6-6c30-4d12-8343-b8a0456e8429')]",
            "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('53e936c6-6c30-4d12-8343-b8a0456e8429')))]",
            "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','53e936c6-6c30-4d12-8343-b8a0456e8429','-', '1.0.1')))]"
        },
        "analyticRuleObject3": {
            "analyticRuleVersion3": "1.0.1",
            "_analyticRulecontentId3": "1bf6e165-5e32-420e-ab4f-0da8558a8be2",
            "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1bf6e165-5e32-420e-ab4f-0da8558a8be2')]",
            "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1bf6e165-5e32-420e-ab4f-0da8558a8be2')))]",
            "_analyticRulecontentProductId3": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1bf6e165-5e32-420e-ab4f-0da8558a8be2','-', '1.0.1')))]"
        },
        "analyticRuleObject4": {
            "analyticRuleVersion4": "1.0.5",
            "_analyticRulecontentId4": "738702fd-0a66-42c7-8586-e30f0583f8fe",
            "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '738702fd-0a66-42c7-8586-e30f0583f8fe')]",
            "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('738702fd-0a66-42c7-8586-e30f0583f8fe')))]",
            "_analyticRulecontentProductId4": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','738702fd-0a66-42c7-8586-e30f0583f8fe','-', '1.0.5')))]"
        },
        "analyticRuleObject5": {
            "analyticRuleVersion5": "1.0.4",
            "_analyticRulecontentId5": "ce1e7025-866c-41f3-9b08-ec170e05e73e",
            "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ce1e7025-866c-41f3-9b08-ec170e05e73e')]",
            "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ce1e7025-866c-41f3-9b08-ec170e05e73e')))]",
            "_analyticRulecontentProductId5": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ce1e7025-866c-41f3-9b08-ec170e05e73e','-', '1.0.4')))]"
        },
        "analyticRuleObject6": {
            "analyticRuleVersion6": "1.0.6",
            "_analyticRulecontentId6": "a3c144f9-8051-47d4-ac29-ffb0c312c910",
            "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a3c144f9-8051-47d4-ac29-ffb0c312c910')]",
            "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('a3c144f9-8051-47d4-ac29-ffb0c312c910')))]",
            "_analyticRulecontentProductId6": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','a3c144f9-8051-47d4-ac29-ffb0c312c910','-', '1.0.6')))]"
        },
        "analyticRuleObject7": {
            "analyticRuleVersion7": "1.1.2",
            "_analyticRulecontentId7": "b6685757-3ed1-4b05-a5bd-2cacadc86c2a",
            "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b6685757-3ed1-4b05-a5bd-2cacadc86c2a')]",
            "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b6685757-3ed1-4b05-a5bd-2cacadc86c2a')))]",
            "_analyticRulecontentProductId7": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b6685757-3ed1-4b05-a5bd-2cacadc86c2a','-', '1.1.2')))]"
        },
        "analyticRuleObject8": {
            "analyticRuleVersion8": "1.0.2",
            "_analyticRulecontentId8": "1785d372-b9fe-4283-96a6-3a1d83cabfd1",
            "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1785d372-b9fe-4283-96a6-3a1d83cabfd1')]",
            "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1785d372-b9fe-4283-96a6-3a1d83cabfd1')))]",
            "_analyticRulecontentProductId8": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1785d372-b9fe-4283-96a6-3a1d83cabfd1','-', '1.0.2')))]"
        },
        "analyticRuleObject9": {
            "analyticRuleVersion9": "1.0.2",
            "_analyticRulecontentId9": "3bd33158-3f0b-47e3-a50f-7c20a1b88038",
            "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3bd33158-3f0b-47e3-a50f-7c20a1b88038')]",
            "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('3bd33158-3f0b-47e3-a50f-7c20a1b88038')))]",
            "_analyticRulecontentProductId9": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','3bd33158-3f0b-47e3-a50f-7c20a1b88038','-', '1.0.2')))]"
        },
        "analyticRuleObject10": {
            "analyticRuleVersion10": "1.0.0",
            "_analyticRulecontentId10": "26e81021-2de6-4442-a74a-a77885e96911",
            "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '26e81021-2de6-4442-a74a-a77885e96911')]",
            "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('26e81021-2de6-4442-a74a-a77885e96911')))]",
            "_analyticRulecontentProductId10": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','26e81021-2de6-4442-a74a-a77885e96911','-', '1.0.0')))]"
        },
        "huntingQueryObject1": {
            "huntingQueryVersion1": "1.1.0",
            "_huntingQuerycontentId1": "cdac93ef-56c0-45bf-9e7f-9cbf0ad06808",
            "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('cdac93ef-56c0-45bf-9e7f-9cbf0ad06808')))]"
        },
        "huntingQueryObject2": {
            "huntingQueryVersion2": "1.1.0",
            "_huntingQuerycontentId2": "cdac93ef-56c0-45bf-9e7f-9cbf0ad034234",
            "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('cdac93ef-56c0-45bf-9e7f-9cbf0ad034234')))]"
        },
        "huntingQueryObject3": {
            "huntingQueryVersion3": "1.0.1",
            "_huntingQuerycontentId3": "cdac93ef-56c0-45bf-9e7f-9cbf0ad06567",
            "huntingQueryTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('cdac93ef-56c0-45bf-9e7f-9cbf0ad06567')))]"
        },
        "huntingQueryObject4": {
            "huntingQueryVersion4": "1.0.1",
            "_huntingQuerycontentId4": "cdac93ef-56c0-45bf-9e7f-9cbf0ad06123",
            "huntingQueryTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('cdac93ef-56c0-45bf-9e7f-9cbf0ad06123')))]"
        },
        "workbookVersion1": "1.0.0",
        "workbookContentId1": "MDOWorkbook",
        "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
        "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
        "_workbookContentId1": "[variables('workbookContentId1')]",
        "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
        "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
        "workbookVersion2": "1.0.0",
        "workbookContentId2": "MicrosoftDefenderForEndPoint",
        "workbookId2": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId2'))]",
        "workbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId2'))))]",
        "_workbookContentId2": "[variables('workbookContentId2')]",
        "_workbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId2'),'-', variables('workbookVersion2'))))]",
        "workbookVersion3": "1.0.0",
        "workbookContentId3": "MicrosoftDefenderForIdentity",
        "workbookId3": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId3'))]",
        "workbookTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId3'))))]",
        "_workbookContentId3": "[variables('workbookContentId3')]",
        "_workbookcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId3'),'-', variables('workbookVersion3'))))]",
        "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
    },
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('dataConnectorTemplateSpecName1')]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Microsoft Defender XDR data connector with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersion1')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
                            "apiVersion": "2021-03-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "StaticUI",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "[variables('_uiConfigId1')]",
                                    "title": "Microsoft Defender XDR",
                                    "publisher": "Microsoft",
                                    "descriptionMarkdown": "Microsoft Defender XDR is a unified, natively integrated, pre- and post-breach enterprise defense suite that protects endpoint, identity, email, and applications and helps you detect, prevent, investigate, and automatically respond to sophisticated threats.\n\nMicrosoft Defender XDR suite includes: \n- Microsoft Defender for Endpoint\n- Microsoft Defender for Identity\n- Microsoft Defender for Office 365\n- Threat & Vulnerability Management\n- Microsoft Defender for Cloud Apps\n\nFor more information, see the [Microsoft Sentinel documentation](https://go.microsoft.com/fwlink/p/?linkid=2220004&wt.mc_id=sentinel_dataconnectordocs_content_cnl_csasci).",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Incidents",
                                            "baseQuery": "SecurityIncident \n| where ProviderName == \"Microsoft 365 Defender\""
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Alerts",
                                            "baseQuery": "SecurityAlert \n| where ProductName in(\"Microsoft Defender Advanced Threat Protection\",\"Office 365 Advanced Threat Protection\",\"Azure Advanced Threat Protection\",\"Microsoft Cloud App Security\",\"Microsoft 365 Defender\")"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Endpoint Events",
                                            "baseQuery": "DeviceEvents| union isfuzzy=true DeviceFileEvents| union isfuzzy=true DeviceImageLoadEvents| union isfuzzy=true DeviceInfo| union isfuzzy=true DeviceLogonEvents| union isfuzzy=true DeviceNetworkEvents| union isfuzzy=true DeviceNetworkInfo| union isfuzzy=true DeviceProcessEvents| union isfuzzy=true DeviceRegistryEvents| union isfuzzy=true DeviceFileCertificateInfo"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Office Events",
                                            "baseQuery": "EmailEvents| union isfuzzy=true EmailUrlInfo| union isfuzzy=true EmailAttachmentInfo| union isfuzzy=true EmailPostDeliveryEvents"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Identity Events",
                                            "baseQuery": "IdentityLogonEvents| union isfuzzy=true IdentityQueryEvents| union isfuzzy=true IdentityDirectoryEvents"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Cloud app Events",
                                            "baseQuery": "CloudAppEvents"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Defender Alert Evidence",
                                            "baseQuery": "AlertEvidence"
                                        }
                                    ],
                                    "connectivityCriterias": [
                                        {
                                            "type": "SentinelKinds",
                                            "value": [
                                                "MicrosoftThreatProtection"
                                            ]
                                        },
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "DeviceEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "DeviceFileEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "DeviceImageLoadEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "DeviceInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "DeviceLogonEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "DeviceNetworkEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "DeviceNetworkInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "DeviceProcessEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "DeviceRegistryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "DeviceFileCertificateInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        },
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "EmailEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "EmailUrlInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "EmailAttachmentInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "EmailPostDeliveryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "UrlClickEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        },
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "IdentityLogonEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "IdentityQueryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "IdentityDirectoryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        },
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "CloudAppEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        },
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "AlertEvidence\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "SecurityIncident",
                                            "lastDataReceivedQuery": "SecurityIncident \n| where ProviderName == \"Microsoft 365 Defender\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "SecurityAlert",
                                            "lastDataReceivedQuery": "SecurityAlert \n| where ProductName in(\"Microsoft Defender Advanced Threat Protection\",\"Office 365 Advanced Threat Protection\",\"Azure Advanced Threat Protection\",\"Microsoft Cloud App Security\",\"Microsoft 365 Defender\")\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "DeviceEvents",
                                            "lastDataReceivedQuery": "DeviceEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "DeviceFileEvents",
                                            "lastDataReceivedQuery": "DeviceFileEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "DeviceImageLoadEvents",
                                            "lastDataReceivedQuery": "DeviceImageLoadEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "DeviceInfo",
                                            "lastDataReceivedQuery": "DeviceInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "DeviceLogonEvents",
                                            "lastDataReceivedQuery": "DeviceLogonEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "DeviceNetworkEvents",
                                            "lastDataReceivedQuery": "DeviceNetworkEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "DeviceNetworkInfo",
                                            "lastDataReceivedQuery": "DeviceNetworkInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "DeviceProcessEvents",
                                            "lastDataReceivedQuery": "DeviceProcessEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "DeviceRegistryEvents",
                                            "lastDataReceivedQuery": "DeviceRegistryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "DeviceFileCertificateInfo",
                                            "lastDataReceivedQuery": "DeviceFileCertificateInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "EmailEvents",
                                            "lastDataReceivedQuery": "EmailEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "EmailUrlInfo",
                                            "lastDataReceivedQuery": "EmailUrlInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "EmailAttachmentInfo",
                                            "lastDataReceivedQuery": "EmailAttachmentInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "EmailPostDeliveryEvents",
                                            "lastDataReceivedQuery": "EmailPostDeliveryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "UrlClickEvents",
                                            "lastDataReceivedQuery": "UrlClickEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "IdentityLogonEvents",
                                            "lastDataReceivedQuery": "IdentityLogonEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "IdentityQueryEvents",
                                            "lastDataReceivedQuery": "IdentityQueryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "IdentityDirectoryEvents",
                                            "lastDataReceivedQuery": "IdentityDirectoryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "CloudAppEvents",
                                            "lastDataReceivedQuery": "CloudAppEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AlertEvidence",
                                            "lastDataReceivedQuery": "AlertEvidence\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2023-04-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                                "contentId": "[variables('_dataConnectorContentId1')]",
                                "kind": "DataConnector",
                                "version": "[variables('dataConnectorVersion1')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "contentKind": "DataConnector",
                "displayName": "Microsoft Defender XDR",
                "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
                "id": "[variables('_dataConnectorcontentProductId1')]",
                "version": "[variables('dataConnectorVersion1')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
            "dependsOn": [
                "[variables('_dataConnectorId1')]"
            ],
            "location": "[parameters('workspace-location')]",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Defender XDR",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft",
                    "email": "[variables('_email')]"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
            "apiVersion": "2021-03-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
            "location": "[parameters('workspace-location')]",
            "kind": "StaticUI",
            "properties": {
                "connectorUiConfig": {
                    "title": "Microsoft Defender XDR",
                    "publisher": "Microsoft",
                    "descriptionMarkdown": "Microsoft Defender XDR is a unified, natively integrated, pre- and post-breach enterprise defense suite that protects endpoint, identity, email, and applications and helps you detect, prevent, investigate, and automatically respond to sophisticated threats.\n\nMicrosoft Defender XDR suite includes: \n- Microsoft Defender for Endpoint\n- Microsoft Defender for Identity\n- Microsoft Defender for Office 365\n- Threat & Vulnerability Management\n- Microsoft Defender for Cloud Apps\n\nFor more information, see the [Microsoft Sentinel documentation](https://go.microsoft.com/fwlink/p/?linkid=2220004&wt.mc_id=sentinel_dataconnectordocs_content_cnl_csasci).",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "Incidents",
                            "baseQuery": "SecurityIncident \n| where ProviderName == \"Microsoft 365 Defender\""
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "Alerts",
                            "baseQuery": "SecurityAlert \n| where ProductName in(\"Microsoft Defender Advanced Threat Protection\",\"Office 365 Advanced Threat Protection\",\"Azure Advanced Threat Protection\",\"Microsoft Cloud App Security\",\"Microsoft 365 Defender\")"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "Endpoint Events",
                            "baseQuery": "DeviceEvents| union isfuzzy=true DeviceFileEvents| union isfuzzy=true DeviceImageLoadEvents| union isfuzzy=true DeviceInfo| union isfuzzy=true DeviceLogonEvents| union isfuzzy=true DeviceNetworkEvents| union isfuzzy=true DeviceNetworkInfo| union isfuzzy=true DeviceProcessEvents| union isfuzzy=true DeviceRegistryEvents| union isfuzzy=true DeviceFileCertificateInfo"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "Office Events",
                            "baseQuery": "EmailEvents| union isfuzzy=true EmailUrlInfo| union isfuzzy=true EmailAttachmentInfo| union isfuzzy=true EmailPostDeliveryEvents"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "Identity Events",
                            "baseQuery": "IdentityLogonEvents| union isfuzzy=true IdentityQueryEvents| union isfuzzy=true IdentityDirectoryEvents"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "Cloud app Events",
                            "baseQuery": "CloudAppEvents"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "Defender Alert Evidence",
                            "baseQuery": "AlertEvidence"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "SecurityIncident",
                            "lastDataReceivedQuery": "SecurityIncident \n| where ProviderName == \"Microsoft 365 Defender\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "SecurityAlert",
                            "lastDataReceivedQuery": "SecurityAlert \n| where ProductName in(\"Microsoft Defender Advanced Threat Protection\",\"Office 365 Advanced Threat Protection\",\"Azure Advanced Threat Protection\",\"Microsoft Cloud App Security\",\"Microsoft 365 Defender\")\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "DeviceEvents",
                            "lastDataReceivedQuery": "DeviceEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "DeviceFileEvents",
                            "lastDataReceivedQuery": "DeviceFileEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "DeviceImageLoadEvents",
                            "lastDataReceivedQuery": "DeviceImageLoadEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "DeviceInfo",
                            "lastDataReceivedQuery": "DeviceInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "DeviceLogonEvents",
                            "lastDataReceivedQuery": "DeviceLogonEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "DeviceNetworkEvents",
                            "lastDataReceivedQuery": "DeviceNetworkEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "DeviceNetworkInfo",
                            "lastDataReceivedQuery": "DeviceNetworkInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "DeviceProcessEvents",
                            "lastDataReceivedQuery": "DeviceProcessEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "DeviceRegistryEvents",
                            "lastDataReceivedQuery": "DeviceRegistryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "DeviceFileCertificateInfo",
                            "lastDataReceivedQuery": "DeviceFileCertificateInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "EmailEvents",
                            "lastDataReceivedQuery": "EmailEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "EmailUrlInfo",
                            "lastDataReceivedQuery": "EmailUrlInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "EmailAttachmentInfo",
                            "lastDataReceivedQuery": "EmailAttachmentInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "EmailPostDeliveryEvents",
                            "lastDataReceivedQuery": "EmailPostDeliveryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "UrlClickEvents",
                            "lastDataReceivedQuery": "UrlClickEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "IdentityLogonEvents",
                            "lastDataReceivedQuery": "IdentityLogonEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "IdentityQueryEvents",
                            "lastDataReceivedQuery": "IdentityQueryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "IdentityDirectoryEvents",
                            "lastDataReceivedQuery": "IdentityDirectoryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "CloudAppEvents",
                            "lastDataReceivedQuery": "CloudAppEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AlertEvidence",
                            "lastDataReceivedQuery": "AlertEvidence\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriterias": [
                        {
                            "type": "SentinelKinds",
                            "value": [
                                "MicrosoftThreatProtection"
                            ]
                        },
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "DeviceEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "DeviceFileEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "DeviceImageLoadEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "DeviceInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "DeviceLogonEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "DeviceNetworkEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "DeviceNetworkInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "DeviceProcessEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "DeviceRegistryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "DeviceFileCertificateInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        },
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "EmailEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "EmailUrlInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "EmailAttachmentInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "EmailPostDeliveryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "UrlClickEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        },
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "IdentityLogonEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "IdentityQueryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "IdentityDirectoryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        },
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "CloudAppEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        },
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "AlertEvidence\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        }
                    ],
                    "id": "[variables('_uiConfigId1')]"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "PossiblePhishingwithCSL&NetworkSession_AnalyticalRules Analytics Rule with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query looks for malicious URL clicks in phishing email recognized by MDO in correlation with CommonSecurityLogs(CSL) & NetworkSession events. \nIf your workspace doesnt have one of the many data sources required for ASIM it may give informational error which can be safely ignored.",
                                "displayName": "Possible Phishing with CSL and Network Sessions",
                                "enabled": false,
                                "query": "//SuspiciousUrlClicked\nAlertEvidence\n| where ServiceSource =~ \"Microsoft Defender for Office 365\"\n| where EntityType =~ \"Url\"\n| project AlertId, RemoteUrl\n| join (\nAlertEvidence\n| where ServiceSource =~ \"Microsoft Defender for Office 365\"\n| where EntityType =~ \"MailMessage\"\n| project AlertId, NetworkMessageId\n)\non AlertId\n| distinct RemoteUrl, NetworkMessageId\n| join EmailEvents on NetworkMessageId\n| distinct RemoteUrl, NetworkMessageId, RecipientEmailAddress, RecipientObjectId\n| join kind = inner IdentityInfo on $left.RecipientObjectId  == $right.AccountObjectId\n| distinct RemoteUrl, NetworkMessageId, RecipientEmailAddress , RecipientObjectId, AccountSID\n| join kind = inner  \n(DeviceEvents\n| where ActionType =~ \"BrowserLaunchedToOpenUrl\"| where isnotempty(RemoteUrl)\n| project  UrlClickedByUserSid = RemoteUrl,\nInitiatingProcessAccountSid, DeviceName, DeviceId, InitiatingProcessFileName, InitiatingProcessAccountName\n)\non $left.AccountSID == $right.InitiatingProcessAccountSid and $left.RemoteUrl == $right.UrlClickedByUserSid\n| distinct  RemoteUrl, NetworkMessageId, RecipientEmailAddress, RecipientObjectId,\n AccountSID, UrlClickedByUserSid, DeviceName, DeviceId, InitiatingProcessFileName, InitiatingProcessAccountName\n|  join kind=inner\n(\n//Suspicious url clicked found in common security logs\nCommonSecurityLog\n| project TimeGenerated, DeviceVendor, DeviceProduct, DeviceAction, DestinationDnsDomain, DestinationIP, RequestURL, SourceIP, SourceHostName, RequestClientApplication\n) on $left.RemoteUrl== $right.RequestURL\n|  join kind=inner\n(\n//Find the relevant network sessions\n_Im_NetworkSession\n| where isnotempty(DstIpAddr)\n| where not(ipv4_is_private(DstIpAddr))\n| project TimeGenerated, SrcIpAddr, SrcPortNumber, DstIpAddr, DstPortNumber, DstBytes, SrcBytes\n) on  $left.DestinationIP == $right.DstIpAddr //The relevant network session being projected \n| summarize count() by TimeGenerated, RecipientEmailAddress, UrlClickedByUserSid, InitiatingProcessAccountName, DeviceName, InitiatingProcessFileName,DeviceProduct, DeviceAction, SourceIP, DestinationIP, RequestClientApplication\n| extend HostName = iff(DeviceName has '.', substring(DeviceName,0,indexof(DeviceName,'.')),DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName,indexof(DeviceName,'.')+1),\"\")\n| extend Name = tostring(split(InitiatingProcessAccountName,'@',0)[0]), UPNSuffix = tostring(split(InitiatingProcessAccountName,'@',1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "AlertEvidence",
                                            "EmailEvents",
                                            "IdentityInfo",
                                            "DeviceEvents",
                                            "DeviceNetworkEvents"
                                        ]
                                    },
                                    {
                                        "connectorId": "Zscaler",
                                        "dataTypes": [
                                            "CommonSecurityLog"
                                        ]
                                    },
                                    {
                                        "connectorId": "Fortinet",
                                        "dataTypes": [
                                            "CommonSecurityLog"
                                        ]
                                    },
                                    {
                                        "connectorId": "CheckPoint",
                                        "dataTypes": [
                                            "CommonSecurityLog"
                                        ]
                                    },
                                    {
                                        "connectorId": "PaloAltoNetworks",
                                        "dataTypes": [
                                            "CommonSecurityLog"
                                        ]
                                    },
                                    {
                                        "connectorId": "AWSS3",
                                        "datatypes": [
                                            "AWSVPCFlow"
                                        ]
                                    },
                                    {
                                        "connectorId": "WindowsForwardedEvents",
                                        "dataTypes": [
                                            "WindowsEvent"
                                        ]
                                    },
                                    {
                                        "connectorId": "SecurityEvents",
                                        "dataTypes": [
                                            "SecurityEvent"
                                        ]
                                    },
                                    {
                                        "connectorId": "MicrosoftSysmonForLinux",
                                        "dataTypes": [
                                            "Syslog"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureNSG",
                                        "dataTypes": [
                                            "AzureDiagnostics"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureMonitor(VMInsights)",
                                        "dataTypes": [
                                            "VMConnection"
                                        ]
                                    },
                                    {
                                        "connectorId": "AIVectraStream",
                                        "dataTypes": [
                                            "VectraStream_CL"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "CommandAndControl"
                                ],
                                "techniques": [
                                    "T1566",
                                    "T1102"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "Name",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Host",
                                        "fieldMappings": [
                                            {
                                                "columnName": "HostName",
                                                "identifier": "HostName"
                                            },
                                            {
                                                "columnName": "DnsDomain",
                                                "identifier": "DnsDomain"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "columnName": "SourceIP",
                                                "identifier": "Address"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "columnName": "DestinationIP",
                                                "identifier": "Address"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Analytics Rule 1",
                                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "contentKind": "AnalyticsRule",
                "displayName": "Possible Phishing with CSL and Network Sessions",
                "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
                "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "SUNSPOTHashes_AnalyticalRules Analytics Rule with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query uses Microsoft Defender for Endpoint data to look for IoCs associated with the SUNSPOT malware shared by Crowdstrike.\nMore details: \n  - https://www.crowdstrike.com/blog/sunspot-malware-technical-analysis/ \n  - https://techcommunity.microsoft.com/t5/azure-sentinel/monitoring-your-software-build-process-with-azure-sentinel/ba-p/2140807",
                                "displayName": "SUNSPOT malware hashes",
                                "enabled": false,
                                "query": "let SUNSPOT_Hashes = dynamic([\"c45c9bda8db1d470f1fd0dcc346dc449839eb5ce9a948c70369230af0b3ef168\", \"0819db19be479122c1d48743e644070a8dc9a1c852df9a8c0dc2343e904da389\"]);\nunion isfuzzy=true(\nDeviceEvents\n| where InitiatingProcessSHA256 in (SUNSPOT_Hashes)),\n(DeviceImageLoadEvents\n| where InitiatingProcessSHA256 in (SUNSPOT_Hashes))\n| extend timestamp=TimeGenerated\n| extend HostName = tostring(split(DeviceName, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(DeviceName, '.'), 1, -1), '.'))\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "DeviceImageLoadEvents",
                                            "DeviceEvents"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1554"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Host",
                                        "fieldMappings": [
                                            {
                                                "columnName": "HostName",
                                                "identifier": "HostName"
                                            },
                                            {
                                                "columnName": "DnsDomain",
                                                "identifier": "DnsDomain"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Analytics Rule 2",
                                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "contentKind": "AnalyticsRule",
                "displayName": "SUNSPOT malware hashes",
                "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
                "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject3').analyticRuleTemplateSpecName3]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "PotentialBuildProcessCompromiseMDE_AnalyticalRules Analytics Rule with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "The query looks for source code files being modified immediately after a build process is started. The purpose of this is to look for malicious code injection during the build process. This query uses Microsoft Defender for Endpoint telemetry.\nMore details: https://techcommunity.microsoft.com/t5/azure-sentinel/monitoring-the-software-supply-chain-with-azure-sentinel/ba-p/2176463",
                                "displayName": "Potential Build Process Compromise - MDE",
                                "enabled": false,
                                "query": "// How far back to look for events from\nlet timeframe = 1d;\n// How close together build events and file modifications should occur to alert (make this smaller to reduce FPs)\nlet time_window = 5m;\n// Edit this to include build processes used\nlet build_processes = dynamic([\"MSBuild.exe\", \"dotnet.exe\", \"VBCSCompiler.exe\"]);\n// Include any processes that you want to allow to edit files during/around the build process\nlet allow_list = dynamic([]);\nDeviceProcessEvents\n| where TimeGenerated > ago(timeframe)\n// Look for build process starts\n| where FileName has_any (build_processes)\n| summarize by BuildParentProcess=InitiatingProcessFileName, BuildProcess=FileName, BuildAccount = AccountName, DeviceName, BuildCommand=ProcessCommandLine, timekey= bin(TimeGenerated, time_window), BuildProcessTime=TimeGenerated\n| join kind=inner(\nDeviceFileEvents\n| where TimeGenerated > ago(timeframe)\n| where InitiatingProcessFileName !in (allow_list)\n| where ActionType == \"FileCreated\"  or ActionType == \"FileModified\"\n// Look for code files, edit this to include file extensions used in build.\n| where FileName endswith \".cs\" or FileName endswith \".cpp\"\n| summarize by FileEditParentProcess=InitiatingProcessParentFileName, FileEditAccount = InitiatingProcessAccountName, DeviceName, FileEdited=FileName, FileEditProcess=InitiatingProcessFileName, timekey= bin(TimeGenerated, time_window), FileEditTime=TimeGenerated)\n// join where build processes and file modifications seen at same time on same host\non timekey, DeviceName\n// Limit to only where the file edit happens after the build process starts\n| where BuildProcessTime <= FileEditTime\n| summarize make_set(FileEdited), make_set(FileEditProcess), make_set(FileEditAccount) by timekey, DeviceName, BuildParentProcess, BuildProcess\n| extend HostName = iff(DeviceName has '.', substring(DeviceName,0,indexof(DeviceName,'.')),DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName,indexof(DeviceName,'.')+1),\"\")\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "DeviceProcessEvents",
                                            "DeviceFileEvents"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1554"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Host",
                                        "fieldMappings": [
                                            {
                                                "columnName": "HostName",
                                                "identifier": "HostName"
                                            },
                                            {
                                                "columnName": "DnsDomain",
                                                "identifier": "DnsDomain"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject3').analyticRuleId3,'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Analytics Rule 3",
                                "parentId": "[variables('analyticRuleObject3').analyticRuleId3]",
                                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                "contentKind": "AnalyticsRule",
                "displayName": "Potential Build Process Compromise - MDE",
                "contentProductId": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
                "id": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject4').analyticRuleTemplateSpecName4]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "SolarWinds_TEARDROP_Process-IOCs_AnalyticalRules Analytics Rule with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies SolarWinds TEARDROP memory-only dropper IOCs in Window's defender Exploit Guard activity\nReferences:\n- https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\n- https://gist.github.com/olafhartong/71ffdd4cab4b6acd5cbcd1a0691ff82f",
                                "displayName": "TEARDROP memory-only dropper",
                                "enabled": false,
                                "query": "DeviceEvents\n| where ActionType has \"ExploitGuardNonMicrosoftSignedBlocked\"\n| where InitiatingProcessFileName has \"svchost.exe\" and FileName has \"NetSetupSvc.dll\"\n| extend timestamp = TimeGenerated, AccountEntity = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName),FileHashType = \"SHA1\"\n| extend HostName = tostring(split(DeviceName, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(DeviceName, '.'), 1, -1), '.'))\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "DeviceEvents"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Execution",
                                    "Persistence",
                                    "DefenseEvasion"
                                ],
                                "techniques": [
                                    "T1543",
                                    "T1059",
                                    "T1027"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountEntity",
                                                "identifier": "Name"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Host",
                                        "fieldMappings": [
                                            {
                                                "columnName": "HostName",
                                                "identifier": "HostName"
                                            },
                                            {
                                                "columnName": "DnsDomain",
                                                "identifier": "DnsDomain"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "FileHash",
                                        "fieldMappings": [
                                            {
                                                "columnName": "FileHashType",
                                                "identifier": "Algorithm"
                                            },
                                            {
                                                "columnName": "InitiatingProcessSHA1",
                                                "identifier": "Value"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject4').analyticRuleId4,'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Analytics Rule 4",
                                "parentId": "[variables('analyticRuleObject4').analyticRuleId4]",
                                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                "contentKind": "AnalyticsRule",
                "displayName": "TEARDROP memory-only dropper",
                "contentProductId": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
                "id": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject5').analyticRuleTemplateSpecName5]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "SolarWinds_SUNBURST_Network-IOCs_AnalyticalRules Analytics Rule with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies SolarWinds SUNBURST domain beacon IOCs in DeviceNetworkEvents\nReferences:\n- https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\n- https://gist.github.com/olafhartong/71ffdd4cab4b6acd5cbcd1a0691ff82f",
                                "displayName": "SUNBURST network beacons",
                                "enabled": false,
                                "query": "let SunburstURL=dynamic([\"panhardware.com\",\"databasegalore.com\",\"avsvmcloud.com\",\"freescanonline.com\",\"thedoccloud.com\",\"deftsecurity.com\"]);\nDeviceNetworkEvents\n| where ActionType == \"ConnectionSuccess\"\n| where RemoteUrl in(SunburstURL)\n| extend timestamp = TimeGenerated,AccountEntity = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName),HashAlgorithm = 'MD5'\n| extend HostName = tostring(split(DeviceName, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(DeviceName, '.'), 1, -1), '.'))\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "DeviceNetworkEvents"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Execution",
                                    "Persistence",
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1195",
                                    "T1059",
                                    "T1546"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountEntity",
                                                "identifier": "Name"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Host",
                                        "fieldMappings": [
                                            {
                                                "columnName": "HostName",
                                                "identifier": "HostName"
                                            },
                                            {
                                                "columnName": "DnsDomain",
                                                "identifier": "DnsDomain"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "columnName": "RemoteIP",
                                                "identifier": "Address"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "URL",
                                        "fieldMappings": [
                                            {
                                                "columnName": "RemoteUrl",
                                                "identifier": "Url"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "FileHash",
                                        "fieldMappings": [
                                            {
                                                "columnName": "HashAlgorithm",
                                                "identifier": "Algorithm"
                                            },
                                            {
                                                "columnName": "InitiatingProcessMD5",
                                                "identifier": "Value"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject5').analyticRuleId5,'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Analytics Rule 5",
                                "parentId": "[variables('analyticRuleObject5').analyticRuleId5]",
                                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                "contentKind": "AnalyticsRule",
                "displayName": "SUNBURST network beacons",
                "contentProductId": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
                "id": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject6').analyticRuleTemplateSpecName6]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "SolarWinds_SUNBURST_&_SUPERNOVA_File-IOCs_AnalyticalRules Analytics Rule with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject6').analyticRuleVersion6]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies SolarWinds SUNBURST and SUPERNOVA backdoor file hash IOCs in DeviceFileEvents\nReferences:\n- https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\n- https://gist.github.com/olafhartong/71ffdd4cab4b6acd5cbcd1a0691ff82f",
                                "displayName": "SUNBURST and SUPERNOVA backdoor hashes",
                                "enabled": false,
                                "query": "let SunburstMD5=dynamic([\"b91ce2fa41029f6955bff20079468448\",\"02af7cec58b9a5da1c542b5a32151ba1\",\"2c4a910a1299cdae2a4e55988a2f102e\",\"846e27a652a5e1bfbd0ddd38a16dc865\",\"4f2eb62fa529c0283b28d05ddd311fae\"]);\nlet SupernovaMD5=\"56ceb6d0011d87b6e4d7023d7ef85676\";\nDeviceFileEvents\n| where MD5 in(SunburstMD5) or MD5 in(SupernovaMD5)\n| extend timestamp = TimeGenerated, Account = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName),AlgorithmEntity = \"MD5\" ,FileHashEntity = MD5\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "DeviceFileEvents"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Execution",
                                    "Persistence",
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1195",
                                    "T1059",
                                    "T1546"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "Account",
                                                "identifier": "Name"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Host",
                                        "fieldMappings": [
                                            {
                                                "columnName": "DeviceName",
                                                "identifier": "HostName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "FileHash",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AlgorithmEntity",
                                                "identifier": "Algorithm"
                                            },
                                            {
                                                "columnName": "FileHashEntity",
                                                "identifier": "Value"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject6').analyticRuleId6,'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Analytics Rule 6",
                                "parentId": "[variables('analyticRuleObject6').analyticRuleId6]",
                                "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject6').analyticRuleVersion6]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                "contentKind": "AnalyticsRule",
                "displayName": "SUNBURST and SUPERNOVA backdoor hashes",
                "contentProductId": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
                "id": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
                "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject7').analyticRuleTemplateSpecName7]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "AVdetectionsrelatedtoUkrainebasedthreats_AnalyticalRules Analytics Rule with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject7').analyticRuleVersion7]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query looks for Microsoft Defender AV detections for malware observed in relation to the war in Ukraine.\n  Ref: https://msrc-blog.microsoft.com/2022/02/28/analysis-resources-cyber-threat-activity-ukraine/ ",
                                "displayName": "AV detections related to Ukraine threats",
                                "enabled": false,
                                "query": "let UA_threats = dynamic([\"FoxBlade\", \"WhisperGate\", \"Lasainraw\", \"SonicVote\", \"CaddyWiper\", \"AprilAxe\", \"FiberLake\", \"Industroyer\", \"DesertBlade\"]);\n  SecurityAlert\n  | where ProviderName =~ \"MDATP\"\n  | extend ThreatFamilyName = tostring(parse_json(ExtendedProperties).ThreatFamilyName)\n  | where ThreatFamilyName in~ (UA_threats)\n  | extend HostName = iff(CompromisedEntity has '.', substring(CompromisedEntity,0,indexof(CompromisedEntity,'.')),CompromisedEntity)\n  | extend DnsDomain = iff(CompromisedEntity has '.', substring(CompromisedEntity,indexof(CompromisedEntity,'.')+1),\"\")\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "SecurityAlert"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Impact"
                                ],
                                "techniques": [
                                    "T1485"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Host",
                                        "fieldMappings": [
                                            {
                                                "columnName": "HostName",
                                                "identifier": "HostName"
                                            },
                                            {
                                                "columnName": "DnsDomain",
                                                "identifier": "DnsDomain"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject7').analyticRuleId7,'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Analytics Rule 7",
                                "parentId": "[variables('analyticRuleObject7').analyticRuleId7]",
                                "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject7').analyticRuleVersion7]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                "contentKind": "AnalyticsRule",
                "displayName": "AV detections related to Ukraine threats",
                "contentProductId": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
                "id": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
                "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject8').analyticRuleTemplateSpecName8]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "AVTarrask_AnalyticalRules Analytics Rule with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject8').analyticRuleVersion8]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query looks for Microsoft Defender AV detections related to Tarrask malware. In Microsoft Sentinel, the SecurityAlerts table \n includes only the Device Name of the affected device, this query joins the DeviceInfo table to clearly connect other information such as Device group, ip, logged-on users etc. \n This would allow the Microsoft Sentinel analyst to have more context related to the alert, if available.\n Reference: https://www.microsoft.com/security/blog/2022/04/12/tarrask-malware-uses-scheduled-tasks-for-defense-evasion/",
                                "displayName": "AV detections related to Tarrask malware",
                                "enabled": false,
                                "query": "let Tarrask_threats = dynamic([\"HackTool:Win64/Tarrask!MS\", \"HackTool:Win64/Ligolo!MSR\", \"Behavior:Win32/ScheduledTaskHide.A\", \"Tarrask\"]);\nDeviceInfo\n| extend DeviceName = tolower(DeviceName)\n| join kind=rightouter ( SecurityAlert\n| where ProviderName =~ \"MDATP\"\n| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)\n| extend ThreatFamilyName = tostring(parse_json(ExtendedProperties).ThreatFamilyName)\n| where ThreatName in~ (Tarrask_threats) or ThreatFamilyName in~ (Tarrask_threats)\n| extend CompromisedEntity = tolower(CompromisedEntity)\n) on $left.DeviceName == $right.CompromisedEntity\n| summarize by DisplayName, ThreatName, ThreatFamilyName, PublicIP, AlertSeverity, Description, tostring(LoggedOnUsers), DeviceId, TenantId , bin(TimeGenerated, 1d), CompromisedEntity, tostring(LoggedOnUsers), ProductName, Entities\n| extend HostName = iff(CompromisedEntity has '.', substring(CompromisedEntity,0,indexof(CompromisedEntity,'.')),CompromisedEntity)\n| extend DnsDomain = iff(CompromisedEntity has '.', substring(CompromisedEntity,indexof(CompromisedEntity,'.')+1),\"\")\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "SecurityAlert"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1053"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Host",
                                        "fieldMappings": [
                                            {
                                                "columnName": "HostName",
                                                "identifier": "HostName"
                                            },
                                            {
                                                "columnName": "DnsDomain",
                                                "identifier": "DnsDomain"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "columnName": "PublicIP",
                                                "identifier": "Address"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject8').analyticRuleId8,'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Analytics Rule 8",
                                "parentId": "[variables('analyticRuleObject8').analyticRuleId8]",
                                "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject8').analyticRuleVersion8]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                "contentKind": "AnalyticsRule",
                "displayName": "AV detections related to Tarrask malware",
                "contentProductId": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
                "id": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
                "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject9').analyticRuleTemplateSpecName9]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "AVSpringShell_AnalyticalRules Analytics Rule with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject9').analyticRuleVersion9]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query looks for Microsoft Defender AV detections related to the SpringShell vulnerability. In Microsoft Sentinel, the SecurityAlerts table includes only the Device Name of the affected device.\n  This query joins the DeviceInfo table to clearly connect other information such as device group, IP, logged-on users, etc. This would allow the Microsoft Sentinel analyst to have more context related to the alert, if available.\n  Reference: https://www.microsoft.com/security/blog/2022/04/04/springshell-rce-vulnerability-guidance-for-protecting-against-and-detecting-cve-2022-22965/",
                                "displayName": "AV detections related to SpringShell Vulnerability",
                                "enabled": false,
                                "query": "let SpringShell_threats = dynamic([\"Trojan:Python/SpringShellExpl\", \"Exploit:Python/SpringShell\", \"Backdoor:PHP/Remoteshell.V\", \"SpringShell\"]);\nDeviceInfo\n| extend DeviceName = tolower(DeviceName)\n| join kind=inner ( SecurityAlert\n| where ProviderName =~ \"MDATP\"\n| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)\n| extend ThreatFamilyName = tostring(parse_json(ExtendedProperties).ThreatFamilyName)\n| where ThreatName in~ (SpringShell_threats) or ThreatFamilyName in~ (SpringShell_threats)\n| extend CompromisedEntity = tolower(CompromisedEntity)\n) on $left.DeviceName == $right.CompromisedEntity\n| summarize by DisplayName, ThreatName, ThreatFamilyName, PublicIP, AlertSeverity, Description, tostring(LoggedOnUsers), DeviceId, TenantId , bin(TimeGenerated, 1d), CompromisedEntity, tostring(LoggedOnUsers), ProductName, Entities\n| extend HostName = iff(CompromisedEntity has '.', substring(CompromisedEntity,0,indexof(CompromisedEntity,'.')),CompromisedEntity)\n| extend DnsDomain = iff(CompromisedEntity has '.', substring(CompromisedEntity,indexof(CompromisedEntity,'.')+1),\"\")\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "SecurityAlert"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1190"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Host",
                                        "fieldMappings": [
                                            {
                                                "columnName": "HostName",
                                                "identifier": "HostName"
                                            },
                                            {
                                                "columnName": "DnsDomain",
                                                "identifier": "DnsDomain"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "columnName": "PublicIP",
                                                "identifier": "Address"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject9').analyticRuleId9,'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Analytics Rule 9",
                                "parentId": "[variables('analyticRuleObject9').analyticRuleId9]",
                                "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject9').analyticRuleVersion9]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                "contentKind": "AnalyticsRule",
                "displayName": "AV detections related to SpringShell Vulnerability",
                "contentProductId": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
                "id": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
                "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject10').analyticRuleTemplateSpecName10]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "PossibleWebpBufferOverflow_AnalyticalRules Analytics Rule with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject10').analyticRuleVersion10]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query looks at device, process, and network events from Defender for Endpoint that may be vulnerable to buffer overflow defined in CVE-2023-4863. Results are not an indicator of malicious activity.",
                                "displayName": "Execution of software vulnerable to webp buffer overflow of CVE-2023-4863",
                                "enabled": false,
                                "query": "//CVE-2023-4863 Process activity with .webp files on devices where CVE-2023-4863 is unpatched\n//This query shows all process activity with .webp files on vulnerable machines and is not an indicator of malicious activity\nlet VulnDevices = DeviceTvmSoftwareVulnerabilities\n    | where CveId == \"CVE-2023-4863\"\n    | distinct DeviceId;\nunion DeviceProcessEvents, DeviceNetworkEvents, DeviceEvents\n| where DeviceId in (VulnDevices) and InitiatingProcessCommandLine has(\".webp\") or ProcessCommandLine has(\".webp\")",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Informational",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "DeviceProcessEvents",
                                            "DeviceNetworkEvents",
                                            "DeviceEvents",
                                            "DeviceTvmSoftwareVulnerabilities"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Execution"
                                ],
                                "techniques": [
                                    "T1203"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Host",
                                        "fieldMappings": [
                                            {
                                                "columnName": "DeviceName",
                                                "identifier": "HostName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "FullName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Process",
                                        "fieldMappings": [
                                            {
                                                "columnName": "ProcessId",
                                                "identifier": "ProcessId"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Process",
                                        "fieldMappings": [
                                            {
                                                "columnName": "InitiatingProcessId",
                                                "identifier": "ProcessId"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Process",
                                        "fieldMappings": [
                                            {
                                                "columnName": "ProcessCommandLine",
                                                "identifier": "CommandLine"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "alertDetailsOverride": {
                                    "alertDynamicProperties": [],
                                    "alertDisplayNameFormat": "Possible exploitation of CVE-2023-4863"
                                },
                                "incidentConfiguration": {
                                    "createIncident": false,
                                    "groupingConfiguration": {
                                        "reopenClosedIncident": false,
                                        "matchingMethod": "Selected",
                                        "enabled": false,
                                        "groupByEntities": [
                                            "Account"
                                        ],
                                        "lookbackDuration": "5h"
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject10').analyticRuleId10,'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Analytics Rule 10",
                                "parentId": "[variables('analyticRuleObject10').analyticRuleId10]",
                                "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject10').analyticRuleVersion10]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                "contentKind": "AnalyticsRule",
                "displayName": "Execution of software vulnerable to webp buffer overflow of CVE-2023-4863",
                "contentProductId": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
                "id": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
                "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('huntingQueryObject1').huntingQueryTemplateSpecName1]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Appspot Phishing Abuse_HuntingQueries Hunting Query with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2022-10-01",
                            "name": "Microsoft_Defender_XDR_Hunting_Query_1",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Appspot Phishing Abuse",
                                "category": "Hunting Queries",
                                "query": "EmailUrlInfo\n// Detect URLs with a subdomain on appspot.com\n| where UrlDomain matches regex @'\\b[\\w\\-]+-dot-[\\w\\-\\.]+\\.appspot\\.com\\b'\n// Enrich results with sender and recipient data\n| join kind=inner EmailEvents on $left.NetworkMessageId==$right.NetworkMessageId\n// Phishing attempts from Appspot related campaigns typically contain the recipient's email address in the URI\n// Example 1: https://example-dot-example.appspot.com/#recipient@domain.com\n// Example 2: https://example-dot-example.appspot.com/index.html?user=recipient@domain.com\n| where Url has RecipientEmailAddress\n    // Some phishing campaigns pass recipient email as a Base64 encoded string in the URI\n    or Url has base64_encode_tostring(RecipientEmailAddress)\n| project-away NetworkMessageId1, ReportId1, Type1, TimeGenerated1, Timestamp1\n| extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SenderIPv4\n| extend URL_0_Url = Url\n| extend MailBox_0_MailboxPrimaryAddress = RecipientEmailAddress\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "This query helps surface phishing campaigns associated with Appspot abuse.These emails frequently contain phishing links that utilize the recipients' own email address as a unique identifier in the URI.\nThis campaign was published on Twitter by @MsftSecIntel at this link: https://twitter.com/MsftSecIntel/status/1374148156301004800\nReference - https://twitter.com/MsftSecIntel/status/1374148156301004800"
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "InitialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1566"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1),'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Hunting Query 1",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1)]",
                                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                                "kind": "HuntingQuery",
                                "version": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                "contentKind": "HuntingQuery",
                "displayName": "Appspot Phishing Abuse",
                "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.1.0')))]",
                "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.1.0')))]",
                "version": "1.1.0"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('huntingQueryObject2').huntingQueryTemplateSpecName2]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Check for spoofing attempts on the domain with Authentication failures_HuntingQueries Hunting Query with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('huntingQueryObject2').huntingQueryVersion2]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2022-10-01",
                            "name": "Microsoft_Defender_XDR_Hunting_Query_2",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Spoofing attempts from Specific Domains",
                                "category": "Hunting Queries",
                                "query": "// Add the list of domains to search for.\nlet DomainList = dynamic([\"contoso.com\"]); \nEmailEvents \n| where TimeGenerated > ago (1d) and DetectionMethods has \"spoof\" and SenderFromDomain in~ (DomainList)\n| project TimeGenerated, AR=parse_json(AuthenticationDetails) , NetworkMessageId, EmailDirection, Subject, SenderFromAddress, SenderIPv4, ThreatTypes, DetectionMethods, ThreatNames  \n| evaluate bag_unpack(AR)  \n| where column_ifexists('SPF','') =~ \"fail\" or  column_ifexists('DMARC','') =~ \"fail\" or column_ifexists('DKIM','') =~ \"fail\" or column_ifexists('CompAuth','') =~ \"fail\"\n| extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SenderIPv4\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "This query identifies potential phishing or spoofing attempts originating from specific domains with authentication failures."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "InitialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1566"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2),'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Hunting Query 2",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2)]",
                                "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
                                "kind": "HuntingQuery",
                                "version": "[variables('huntingQueryObject2').huntingQueryVersion2]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
                "contentKind": "HuntingQuery",
                "displayName": "Spoofing attempts from Specific Domains",
                "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.1.0')))]",
                "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.1.0')))]",
                "version": "1.1.0"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('huntingQueryObject3').huntingQueryTemplateSpecName3]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Delivered Bad Emails from Top bad IPv4 addresses_HuntingQueries Hunting Query with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('huntingQueryObject3').huntingQueryVersion3]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2022-10-01",
                            "name": "Microsoft_Defender_XDR_Hunting_Query_3",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Determine Successfully Delivered Phishing Emails by top IP Addresses",
                                "category": "Hunting Queries",
                                "query": "// Adjust the cutoff as needed \nlet cutoff = 5;\nEmailEvents\n| where ThreatTypes has \"Malware\" or ThreatTypes has \"Phish\" \n| summarize count() by SenderIPv4 \n| where count_ > cutoff\n| join kind=inner EmailEvents on SenderIPv4  \n| where DeliveryAction =~ \"Delivered\"\n| extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SenderIPv4\n| extend MailBox_0_MailboxPrimaryAddress = RecipientEmailAddress\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "This query identifies phishing emails sent that were successfully delivered, by top IP addressess. cutoff default value is 5, adjust the value as needed."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "InitialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1566"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3),'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Hunting Query 3",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3)]",
                                "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
                                "kind": "HuntingQuery",
                                "version": "[variables('huntingQueryObject3').huntingQueryVersion3]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
                "contentKind": "HuntingQuery",
                "displayName": "Determine Successfully Delivered Phishing Emails by top IP Addresses",
                "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '1.0.1')))]",
                "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '1.0.1')))]",
                "version": "1.0.1"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('huntingQueryObject4').huntingQueryTemplateSpecName4]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "EmailDelivered-ToInbox_HuntingQueries Hunting Query with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('huntingQueryObject4').huntingQueryVersion4]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2022-10-01",
                            "name": "Microsoft_Defender_XDR_Hunting_Query_4",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Determine Successfully Delivered Phishing Emails to Inbox/Junk folder.",
                                "category": "Hunting Queries",
                                "query": "EmailEvents\n| where isnotempty(ThreatTypes) and DeliveryLocation in~ (\"Inbox/folder\",\"Junk folder\")\n| extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SenderIPv4\n| extend MailBox_0_MailboxPrimaryAddress = RecipientEmailAddress\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "This query identifies threats which got successfully delivered to Inbox/Junk folder."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "InitialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1566"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject4')._huntingQuerycontentId4),'/'))))]",
                            "properties": {
                                "description": "Microsoft Defender XDR Hunting Query 4",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject4')._huntingQuerycontentId4)]",
                                "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
                                "kind": "HuntingQuery",
                                "version": "[variables('huntingQueryObject4').huntingQueryVersion4]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
                "contentKind": "HuntingQuery",
                "displayName": "Determine Successfully Delivered Phishing Emails to Inbox/Junk folder.",
                "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject4')._huntingQuerycontentId4,'-', '1.0.1')))]",
                "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject4')._huntingQuerycontentId4,'-', '1.0.1')))]",
                "version": "1.0.1"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('workbookTemplateSpecName1')]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "MDO Insights Workbook with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('workbookVersion1')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Insights/workbooks",
                            "name": "[variables('workbookContentId1')]",
                            "location": "[parameters('workspace-location')]",
                            "kind": "shared",
                            "apiVersion": "2021-08-01",
                            "metadata": {
                                "description": "Gain extensive insight into your organization's Microsoft Defender for Office Activity by analyzing, and correlating events.\nYou can track malware and phishing detection over time."
                            },
                            "properties": {
                                "displayName": "[parameters('workbook1-name')]",
                                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Microsoft Defender for Office 365\\n---\\n\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Subscription}\"],\"parameters\":[{\"id\":\"6e647d99-1a32-4bca-8147-403b5d37d773\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"isRequired\":true,\"value\":\"\",\"typeSettings\":{\"includeAll\":false,\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\"},{\"id\":\"d57bcdf5-aec7-4f86-904c-67171864919b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspace\",\"type\":5,\"isRequired\":true,\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"value\":\"\"},{\"id\":\"2e238f92-709c-410b-93e0-60eab6150a75\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":604800000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Summary- MDO threat count\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let threatcount = EmailEvents\\r\\n| where isnotempty(ThreatTypes)\\r\\n| summarize Count = count()\\r\\n| extend Details = \\\"Email Events\\\";\\r\\nlet phishingcount = EmailEvents\\r\\n| where DetectionMethods has_any ('spoof','impersonation')\\r\\n| summarize Count= count()\\r\\n| extend Details = \\\"Phishing Emails\\\";\\r\\nlet emailposteliverycount = EmailPostDeliveryEvents \\r\\n|where ActionType =~ \\\"Phish ZAP\\\" or ActionType =~ \\\"Malware ZAP\\\"\\r\\n| summarize Count =count()\\r\\n| extend Details = \\\"ZAP Emails\\\";\\r\\nunion threatcount, phishingcount, emailposteliverycount\\r\\n| project Count, Details\\r\\n| order by Details asc\",\"size\":3,\"title\":\"Total Threat count \",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsDomain\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\"}}]},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Details\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"showBorder\":false},\"chartSettings\":{\"xAxis\":\"Count\",\"createOtherGroup\":0},\"mapSettings\":{\"locInfo\":\"LatLong\",\"sizeSettings\":\"Count\",\"sizeAggregation\":\"Sum\",\"legendMetric\":\"Count\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"type\":\"heatmap\",\"colorAggregation\":\"Sum\",\"nodeColorField\":\"Count\",\"heatmapPalette\":\"greenRed\"}}},\"customWidth\":\"100\",\"name\":\"query - 0 - Copy - Copy\"}]},\"customWidth\":\"100\",\"name\":\"Summary - MDO threat count - Copy\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"48578fe1-da47-4a4c-b495-ce7fe24ce495\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"By Email\",\"subTarget\":\"Email\",\"style\":\"link\"},{\"id\":\"30e93159-8bf5-4006-820f-406ea10bcd17\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"By Authentication\",\"subTarget\":\"Authentication\",\"style\":\"link\"},{\"id\":\"c40f76ed-94be-40ff-b65b-3fda306f2c3d\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"By Url\",\"subTarget\":\"Url\",\"style\":\"link\"}]},\"name\":\"links - 8\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents \\r\\n| where isnotempty(ThreatTypes) \\r\\n| summarize count() by ThreatTypes\",\"size\":1,\"title\":\"Threat Type\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"EmailDirection\",\"exportParameterName\":\"Direction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"categoricalbar\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"EmailDirection\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where ThreatTypes has \\\"Malware\\\" or ThreatTypes has \\\"Phish\\\" \\r\\n| summarize count() by RecipientEmailAddress \\r\\n| sort by count_  \\r\\n| take 15\",\"size\":1,\"title\":\"Top Targeted users\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"DeliveryAction\",\"exportParameterName\":\"DeliveryAction\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"DeliveryAction\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"showBorder\":false}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 5 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where DeliveryLocation =~ \\\"Inbox/folder\\\" \\r\\n| where isnotempty(ThreatTypes) and OrgLevelAction =~ \\\"Allow\\\" \\r\\n| count\",\"size\":1,\"title\":\"Malicious Emails Allowed due to Admin overrides\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"EmailAction\",\"exportParameterName\":\"Action\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"DeliveryAction\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"showBorder\":false}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 5 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| summarize count()by DeliveryLocation\",\"size\":0,\"title\":\"Original Email Delivery Location count\",\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"SenderMailFromAddress\",\"parameterName\":\"Sender2\",\"defaultValue\":\"All\"},{\"fieldName\":\"NetworkMessageIds\",\"parameterName\":\"NetworkMessageIdsSender\",\"parameterType\":1,\"defaultValue\":\"[]\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"29ch\"}},{\"columnMatch\":\"DistinctMessages\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"DistinctRecipients\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"21ch\"}},{\"columnMatch\":\"DistinctRecipientDomains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where isnotempty(ThreatTypes) \\r\\n| summarize count() by SenderFromDomain \\r\\n| sort by count_  \\r\\n| take 15\",\"size\":0,\"title\":\"Top Sender Domains for Malicious Emails\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsRecipient\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"DistinctMessages\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"143px\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n//|where Timestamp > ago(30d)  \\r\\n| where isnotempty(ThreatNames) \\r\\n| summarize count() by ThreatNames \\r\\n| sort by count_ \",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Malware families\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageId\",\"exportParameterName\":\"NetworkMessageId\",\"exportDefaultValue\":\"None\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"Subject\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"35ch\"}},{\"columnMatch\":\"EmailDirection\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Outbound\",\"representation\":\"right\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Inbound\",\"representation\":\"left\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Intra-org\",\"representation\":\"Pending\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"DeliveryAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Delivered\",\"representation\":\"success\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Blocked\",\"representation\":\"failed\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Junked\",\"representation\":\"Disable\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"ConfidenceLevel\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"AttachmentCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"UrlCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"NetworkMessageId\",\"formatter\":5}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 6\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Email\"},\"name\":\"EmailGroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents \\r\\n| project Timestamp, AR=parse_json(AuthenticationDetails) , NetworkMessageId, EmailDirection, SenderFromAddress, ThreatTypes, DetectionMethods   \\r\\n| evaluate bag_unpack(AR) \\r\\n| where column_ifexists('DMARC','') =~ \\\"fail\\\" \\r\\n| summarize count() by bin(Timestamp, 1d) \",\"size\":0,\"title\":\"DMARC failure by time\",\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"SenderMailFromAddress\",\"parameterName\":\"Sender2\",\"defaultValue\":\"All\"},{\"fieldName\":\"NetworkMessageIds\",\"parameterName\":\"NetworkMessageIdsSender\",\"parameterType\":1,\"defaultValue\":\"[]\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"150px\"}},{\"columnMatch\":\"DistinctRecipients\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"21ch\"}},{\"columnMatch\":\"DistinctRecipientDomains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]},\"graphSettings\":{\"type\":0}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| project Timestamp, AR=parse_json(AuthenticationDetails) , NetworkMessageId, EmailDirection, SenderFromAddress, ThreatTypes, DetectionMethods   \\r\\n| evaluate bag_unpack(AR) \\r\\n| where column_ifexists('DKIM','') =~ \\\"fail\\\" \\r\\n| summarize count() by bin(Timestamp, 1d)\",\"size\":0,\"title\":\"DKIM Failure Trend\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsRecipient\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| project Timestamp, AR=parse_json(AuthenticationDetails) , NetworkMessageId, EmailDirection, SenderFromAddress, ThreatTypes, DetectionMethods   \\r\\n| evaluate bag_unpack(AR) \\r\\n| where column_ifexists('SPF','') =~ \\\"fail\\\" \\r\\n| summarize count() by bin(Timestamp, 1d)\",\"size\":0,\"title\":\"SPF Fail Trend\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsDomain\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientDomain\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25.8571ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"22ch\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| project Timestamp, AR=parse_json(AuthenticationDetails) , NetworkMessageId, EmailDirection, SenderFromAddress, ThreatTypes, DetectionMethods   \\r\\n| evaluate bag_unpack(AR) \\r\\n| where column_ifexists('CompAuth','') =~ \\\"fail\\\" \\r\\n| summarize count() by bin(Timestamp, 1d) \",\"size\":0,\"title\":\"CompAuth Fail trend\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsDomain\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientDomain\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25.8571ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"22ch\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where OrgLevelPolicy!=\\\"\\\" and OrgLevelAction =~ \\\"Allow\\\" \\r\\n| summarize count() by OrgLevelPolicy \",\"size\":0,\"showAnalytics\":true,\"title\":\"Top policies for Admin overrides (Allow) \",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIdWithFile\",\"exportParameterName\":\"NetworkMessageIdWithFile\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"NetworkMessageIdWithFile\",\"formatter\":5}]},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"FileName\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"UniqueEmailsWithThisAttachment\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"50\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where OrgLevelPolicy!=\\\"\\\" and OrgLevelAction =~ \\\"Block\\\" \\r\\n| summarize count() by OrgLevelPolicy \",\"size\":0,\"showAnalytics\":true,\"title\":\"Top policies for Admin overrides (Block) \",\"noDataMessage\":\"No file attachments were selected\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageId\",\"exportParameterName\":\"NetworkMessageId\",\"exportDefaultValue\":\"None\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"Subject\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"35ch\"}},{\"columnMatch\":\"EmailDirection\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Outbound\",\"representation\":\"right\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Inbound\",\"representation\":\"left\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Intra-org\",\"representation\":\"Pending\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"DeliveryAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Delivered\",\"representation\":\"success\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Blocked\",\"representation\":\"failed\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Junked\",\"representation\":\"Disable\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"ConfidenceLevel\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"AttachmentCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"UrlCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"NetworkMessageId\",\"formatter\":5}]}},\"customWidth\":\"50\",\"name\":\"query - 6 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Authentication\"},\"name\":\"AuthenticationGroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"UrlClickEvents\\r\\n| where ActionType == \\\"ClickAllowed\\\" or IsClickedThrough !=\\\"0\\\" \\r\\n| where isnotempty(ThreatTypes) \\r\\n| summarize count() by bin (Timestamp,1d) \",\"size\":0,\"title\":\"URL Allowed clicks for Malicious clicks\",\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"SenderMailFromAddress\",\"parameterName\":\"Sender2\",\"defaultValue\":\"All\"},{\"fieldName\":\"NetworkMessageIds\",\"parameterName\":\"NetworkMessageIdsSender\",\"parameterType\":1,\"defaultValue\":\"[]\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"TotalUrls\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"DistinctRecipients\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"21ch\"}},{\"columnMatch\":\"DistinctRecipientDomains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Url\"},\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"UrlClickEvents \\r\\n| where isnotempty(ThreatTypes) \\r\\n| summarize count() by Workload \",\"size\":0,\"title\":\"Malicious Click by Workload \",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsRecipient\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"TotalUrls\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Url\"},\"name\":\"query - 0 - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Url\"},\"name\":\"UrlGroup\"}],\"fromTemplateId\":\"sentinel-MDOWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                                "version": "1.0",
                                "sourceId": "[variables('workspaceResourceId')]",
                                "category": "sentinel"
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
                            "properties": {
                                "description": "@{workbookKey=MDOWorkbook; logoFileName=Azure_Sentinel.svg; description=Gain extensive insight into your organization's Microsoft Defender for Office Activity by analyzing, and correlating events.\nYou can track malware and phishing detection over time.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Microsoft Defender XDR MDOWorkbook; templateRelativePath=MDO Insights.json; subtitle=; provider=Microsoft}.description",
                                "parentId": "[variables('workbookId1')]",
                                "contentId": "[variables('_workbookContentId1')]",
                                "kind": "Workbook",
                                "version": "[variables('workbookVersion1')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                },
                                "dependencies": {
                                    "operator": "AND",
                                    "criteria": [
                                        {
                                            "contentId": "SecurityAlert",
                                            "kind": "DataType"
                                        },
                                        {
                                            "contentId": "MicrosoftThreatProtection",
                                            "kind": "DataConnector"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('_workbookContentId1')]",
                "contentKind": "Workbook",
                "displayName": "[parameters('workbook1-name')]",
                "contentProductId": "[variables('_workbookcontentProductId1')]",
                "id": "[variables('_workbookcontentProductId1')]",
                "version": "[variables('workbookVersion1')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('workbookTemplateSpecName2')]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "MicrosoftDefenderForEndPoint Workbook with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('workbookVersion2')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Insights/workbooks",
                            "name": "[variables('workbookContentId2')]",
                            "location": "[parameters('workspace-location')]",
                            "kind": "shared",
                            "apiVersion": "2021-08-01",
                            "metadata": {
                                "description": "A workbook to provide details about Microsoft Defender for Endpoint Advance Hunting to Overview & Analyse data brought through Microsoft Defender XDR Connector."
                            },
                            "properties": {
                                "displayName": "[parameters('workbook2-name')]",
                                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Microsoft Defender for Endpoint (Preview)\\n---\\n\\nA workbook to provide details about Microsoft Defender for Endpoint Advance Hunting to Overview & Analyse data brought through Microsoft Defender XDR Connector.\\n\\n\\n\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"b22a3bd7-19b3-495d-a0df-95a7a59d98ff\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"value\":{\"durationMs\":172800000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"f0450560-ef16-4aa9-a3ad-7485dd909587\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Help\",\"type\":10,\"isRequired\":true,\"jsonData\":\"[{ \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\"},\\r\\n {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\", \\\"selected\\\":true }]\",\"label\":\"Show Help\",\"value\":\"Yes\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 2\"},{\"type\":1,\"content\":{\"json\":\"\\r\\n|Overview|Device|Network|File|\\r\\n|--------|------|-------|----|\\r\\n|MDE Tables Last Data Received|Source of the AV detections|Internet Connected Devices|FileActivityCount per Device|\\r\\n|Daily Data Flow on MDE Tables|Get stats on ASR audit events|Count By Machine Group|Count by InitiatingProcessAccountUpn|\\r\\n|Device Heartbeat|Get stats on ASR blocks|Count By Network Adaptor||\\r\\n|Device where files are copied to USB Drive|AV Detections with USB Disk Drive|TimeSeries on Network Activity||\\r\\n|Device Internet Connectivity Status |List files copied to USB mounted drives|Top 10 RemoteUrl accessed over TimeRange||\\r\\n|Device Count by DNS Suffix ||Tor Clients||\\r\\n|Device Microsoft Entra ID Join status ||||\\r\\n|Device ClientVersion ||||\"},\"conditionalVisibility\":{\"parameterName\":\"Help\",\"comparison\":\"isEqualTo\",\"value\":\"Yes\"},\"name\":\"text - 8\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"454d4e02-26ba-4195-ae30-94752bbf4603\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Overview\",\"subTarget\":\"Overview\",\"preText\":\"Overview\",\"style\":\"link\"},{\"id\":\"3d902e84-3e5b-4631-85d1-c229ec2abf75\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Device\",\"subTarget\":\"Device\",\"style\":\"link\"},{\"id\":\"bbc20288-b398-4f63-b7a9-e3830213bb34\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Network\",\"subTarget\":\"Network\",\"style\":\"link\"},{\"id\":\"edab4a44-8ca3-4ba1-bede-4186f4376d28\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"File\",\"subTarget\":\"File\",\"style\":\"link\"}]},\"name\":\"links - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union \\r\\nisfuzzy = true\\r\\n(DeviceInfo | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type= \\\"DeviceInfo\\\" | extend Description = \\\"Machine information (including OS information)\\\"),\\r\\n(DeviceNetworkInfo | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceNetworkInfo\\\"  | extend Description = \\\"Network properties of machines\\\"),\\r\\n(DeviceProcessEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceProcessEvents\\\" | extend Description = \\\"Process creation and related events\\\"),\\r\\n(DeviceNetworkEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceNetworkEvents\\\" | extend Description = \\\"Network connection and related events\\\"),\\r\\n(DeviceFileEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceFileEvents\\\" | extend Description = \\\"File creation, modification, and other file system events\\\"),\\r\\n(DeviceRegistryEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceRegistryEvents\\\" | extend Description = \\\"Creation and modification of registry entries\\\"),\\r\\n(DeviceLogonEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceLogonEvents\\\" | extend Description = \\\"Sign-ins and other authentication events\\\"),\\r\\n(DeviceImageLoadEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceImageLoadEvents\\\" | extend Description = \\\"DLL loading events\\\"),\\r\\n(DeviceEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceEvents\\\" | extend Description = \\\"Additional events types\\\"),\\r\\n(DeviceFileCertificateInfo | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceFileCertificateInfo\\\" | extend Description = \\\"Certificate information of signed files)\\\")\\r\\n| extend [\\\"Last Log Received At (Local Time)\\\"] = TimeGenerated\\r\\n| project Type, Description, [\\\"Last Log Received At (Local Time)\\\"]\",\"size\":0,\"title\":\"MDE Tables Last Data Received based on {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Type\",\"formatter\":0,\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Last Log Received At\",\"formatter\":6,\"dateFormat\":{\"formatName\":\"fullDateTimePattern\"}}],\"filter\":true}},\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let AllDeviceNames = DeviceInfo | distinct DeviceId, DeviceName;\\nlet DeviceEventSummary = DeviceEvents | summarize count() by DeviceId, Type, bin(TimeGenerated,1d);\\nlet DeviceNetworkEventsSummary = DeviceNetworkEvents | summarize count() by DeviceId,Type, bin(TimeGenerated,1d);\\nlet DeviceNetworkInfoSummary = DeviceNetworkInfo | summarize count() by DeviceId,Type, bin(TimeGenerated,1d);\\nlet DeviceLogonEventsSummary = DeviceLogonEvents | summarize count() by DeviceId,Type, bin(TimeGenerated,1d);\\nlet DeviceRegistryEventsSummary = DeviceRegistryEvents | summarize count() by DeviceId,Type, bin(TimeGenerated,1d);\\nlet DeviceProcessEventsSummary = DeviceProcessEvents | summarize count() by DeviceId,Type, bin(TimeGenerated,1d);\\n(DeviceEventSummary\\n| union DeviceNetworkEventsSummary,\\nDeviceNetworkEventsSummary,\\nDeviceNetworkInfoSummary,\\nDeviceLogonEventsSummary,\\nDeviceRegistryEventsSummary,\\nDeviceProcessEventsSummary)\\n| join kind=inner ( \\nAllDeviceNames\\n)\\non $left.DeviceId == $right.DeviceId\\n| project-reorder Type, TimeGenerated, count_\\n//| project-away DeviceId, DeviceId1\",\"size\":1,\"title\":\"Daily Data Flow on MDE Tables over {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"xAxis\":\"count_\"}},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceInfo \\r\\n| summarize arg_max(TimeGenerated,*) by DeviceId\\r\\n| extend ParsedFields=parse_json(LoggedOnUsers)[0]\\r\\n| extend DurationAtLeast= format_timespan(now()-TimeGenerated,'dd:hh:mm:ss')\\r\\n| project DurationAtLeast,TimeGenerated,DeviceName,DomainName=ParsedFields.DomainName,UserName=ParsedFields.UserName\\r\\n| order by DurationAtLeast asc\",\"size\":0,\"title\":\"Device Heartbeat from TimeTange {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let UsbDriveMount = DeviceEvents\\r\\n| where ActionType==\\\"UsbDriveMounted\\\"\\r\\n| extend ParsedFields=parse_json(AdditionalFields)\\r\\n| project DeviceId, DeviceName, DriveLetter=ParsedFields.DriveLetter, MountTime=Timestamp,\\r\\nProductName=ParsedFields.ProductName,SerialNumber=ParsedFields.SerialNumber,Manufacturer=ParsedFields.Manufacturer\\r\\n| order by DeviceId asc, MountTime desc;\\r\\nlet FileCreation = DeviceFileEvents\\r\\n| where InitiatingProcessAccountName != \\\"system\\\"\\r\\n| where ActionType == \\\"FileCreated\\\"\\r\\n| where FolderPath !startswith \\\"C:\\\\\\\\\\\"\\r\\n| where FolderPath !startswith \\\"\\\\\\\\\\\"\\r\\n| project ReportId,DeviceId,InitiatingProcessAccountDomain,\\r\\nInitiatingProcessAccountName,InitiatingProcessAccountUpn,\\r\\nFileName, FolderPath, SHA256, Timestamp, SensitivityLabel, IsAzureInfoProtectionApplied\\r\\n| order by DeviceId asc, Timestamp desc;\\r\\nFileCreation | lookup kind=inner (UsbDriveMount) on DeviceId\\r\\n| where FolderPath startswith DriveLetter\\r\\n| where Timestamp >= MountTime\\r\\n| partition by ReportId ( top 1 by MountTime )\\r\\n| order by DeviceId asc, Timestamp desc\\r\\n| summarize FileCount = count() by DeviceName\\r\\n| order by FileCount desc\",\"size\":1,\"title\":\"Device where files are copied to USB Drive from TimeTange {TimeRange}\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"FileCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"red\"}}],\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkInfo\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceId\\r\\n| mvexpand ConnectedNetworks\\r\\n| summarize count() by tostring(ConnectedNetworks.IsConnectedToInternet)\",\"size\":1,\"title\":\"Device Internet Connectivity Status from TimeTange {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"FileCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"red\"}}],\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceInfo\\r\\n| where isnotempty(OSPlatform)\\r\\n| summarize arg_max(Timestamp, DeviceName) by DeviceId\\r\\n| extend DeviceMachineName = split(DeviceName, '.')[0]\\r\\n| extend DeviceDomain = substring(DeviceName, strlen(DeviceMachineName) + 1, strlen(DeviceName) - strlen(DeviceMachineName) - 1)\\r\\n| summarize count() by DeviceDomain\",\"size\":1,\"title\":\"Device Count by DNS Suffix\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"filter\":true},\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceInfo\\r\\n| where isnotempty(OSPlatform)\\r\\n| summarize arg_max(TimeGenerated, *) by DeviceId\\r\\n| summarize count() by tostring(IsAzureADJoined)\",\"size\":1,\"title\":\"Device EntraID Join status\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"filter\":true},\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceInfo\\r\\n| where isnotempty(OSPlatform)\\r\\n| summarize arg_max(TimeGenerated, *) by DeviceId\\r\\n| summarize count() by ClientVersion\",\"size\":1,\"title\":\"Device ClientVersion\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"filter\":true},\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy - Copy - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"groupOverview\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//This query shows the source of the AV detections (e.g., the website the file was downloaded from etc.)\\r\\n//\\r\\n//Get the list of AV detections\\r\\nlet avDetections =\\r\\nDeviceEvents\\r\\n| where ActionType == \\\"AntivirusDetection\\\" and isnotempty(MD5)\\r\\n| extend ParsedFields=parse_json(AdditionalFields)\\r\\n| project Timestamp, DeviceName, ThreatName=tostring(ParsedFields.ThreatName), FileName, FolderPath, MD5;\\r\\n//Get a list of file creations\\r\\nlet fileCreations =\\r\\nDeviceFileEvents \\r\\n| where (isnotempty(FileOriginReferrerUrl) or isnotempty(FileOriginUrl)) and isnotempty(MD5)\\r\\n| project MD5, FileOriginUrl, FileOriginReferrerUrl, InitiatingProcessFileName, InitiatingProcessParentFileName;\\r\\n//Join the file creations and AV detections on the MD5 of the file\\r\\navDetections | join kind=inner (fileCreations) on MD5\\r\\n| project-away MD51 //Remove the duplicated MD5 field\\r\\n| sort by Timestamp desc \",\"size\":0,\"title\":\"Source of the AV detections for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceEvents\\r\\n| where ActionType startswith \\\"Asr\\\" and ActionType endswith \\\"Audited\\\"\\r\\n// Count total stats - count events and machines per rule\\r\\n| summarize EventCount=count(), MachinesCount=dcount(DeviceId) by ActionType\",\"size\":0,\"title\":\"Get stats on ASR audit events - count events and machines per rule for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceEvents\\r\\n| where ActionType startswith \\\"Asr\\\" and ActionType endswith \\\"Blocked\\\"\\r\\n// Count total stats - count events and machines per rule\\r\\n| summarize EventCount=count(), MachinesCount=dcount(DeviceId) by ActionType\",\"size\":0,\"title\":\"Get stats on ASR blocks - count events and machines per rule for {TimeRange}\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 1 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//This query make a best-guess detection regarding which removable media device caused an AV detection\\r\\n//The query is best run over 30 days to get the full USB history\\r\\n//\\r\\n//Get a list of USB AV detections. This assumes any path not beginning with C is a removable/USB device\\r\\nlet usbDetections =\\r\\n    DeviceEvents\\r\\n    | where ActionType == \\\"AntivirusDetection\\\" and FolderPath !startswith \\\"c\\\" and FolderPath matches regex \\\"^[A-Za-z]{1}\\\"\\r\\n    | extend ParsedFields=parse_json(AdditionalFields)\\r\\n    | project DetectionTime=Timestamp, DeviceName, ThreatName=tostring(ParsedFields.ThreatName), FileName, FolderPath;\\r\\n//Get a list of USB disk drive connections, grouped by computer name and DeviceID\\r\\nlet usbConnections = \\r\\n    DeviceEvents\\r\\n    | where ActionType == \\\"PnpDeviceConnected\\\"\\r\\n    | extend parsed=parse_json(AdditionalFields)\\r\\n    | project Timestamp, DeviceName, DeviceId=tostring(parsed.DeviceId), ClassName=tostring(parsed.ClassName)\\r\\n    | where ClassName == \\\"DiskDrive\\\"\\r\\n    | summarize UsbFirstSeen=min(Timestamp), UsbLastSeen=max(Timestamp) by DeviceId, DeviceName;\\r\\n//Join USB AV detections and connections, where the detection occurs after the USB has been plugged in\\r\\nusbDetections | join kind=inner (usbConnections) on DeviceName | where DetectionTime > UsbFirstSeen and DetectionTime < UsbLastSeen\\r\\n| project DetectionTime, DeviceName, ThreatName, FileName, FolderPath, DeviceId, UsbFirstSeen, UsbLastSeen\\r\\n| sort by DetectionTime desc\",\"size\":0,\"title\":\"AV Detections with USB Disk Drive for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let UsbDriveMount = DeviceEvents\\r\\n| where ActionType==\\\"UsbDriveMounted\\\"\\r\\n| extend ParsedFields=parse_json(AdditionalFields)\\r\\n| project DeviceId, DeviceName, DriveLetter=ParsedFields.DriveLetter, MountTime=Timestamp,\\r\\nProductName=ParsedFields.ProductName,SerialNumber=ParsedFields.SerialNumber,Manufacturer=ParsedFields.Manufacturer\\r\\n| order by DeviceId asc, MountTime desc;\\r\\nlet FileCreation = DeviceFileEvents\\r\\n| where InitiatingProcessAccountName != \\\"system\\\"\\r\\n| where ActionType == \\\"FileCreated\\\"\\r\\n| where FolderPath !startswith \\\"C:\\\\\\\\\\\"\\r\\n| where FolderPath !startswith \\\"\\\\\\\\\\\"\\r\\n| project ReportId,DeviceId,InitiatingProcessAccountDomain,\\r\\nInitiatingProcessAccountName,InitiatingProcessAccountUpn,\\r\\nFileName, FolderPath, SHA256, Timestamp, SensitivityLabel, IsAzureInfoProtectionApplied\\r\\n| order by DeviceId asc, Timestamp desc;\\r\\nFileCreation | lookup kind=inner (UsbDriveMount) on DeviceId\\r\\n| where FolderPath startswith DriveLetter\\r\\n| where Timestamp >= MountTime\\r\\n| partition by ReportId ( top 1 by MountTime )\\r\\n| order by DeviceId asc, Timestamp desc\",\"size\":0,\"title\":\"List files copied to USB mounted drives for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 4\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"Device\"},\"name\":\"groupDevice\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkInfo\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceId\\r\\n| mv-apply ConnectedNetworks on \\r\\n(\\r\\nwhere ConnectedNetworks.IsConnectedToInternet == true\\r\\n)\\r\\n| project DeviceName, DefaultGateways, IPv4Dhcp, IPv6Dhcp,MacAddress,MachineGroup, ConnectedNetworks.IsConnectedToInternet\",\"size\":0,\"title\":\"Internet Connected Devices for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkInfo\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceId\\r\\n| summarize count() by MachineGroup\",\"size\":0,\"title\":\"Count By Machine Group for {TimeRange}\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkInfo\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceId\\r\\n| summarize count() by NetworkAdapterType, NetworkAdapterStatus\",\"size\":0,\"title\":\"Count By Network Adaptor\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"name\":\"query - 0 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkEvents\\r\\n| summarize count() by DeviceName, DeviceId,bin( TimeGenerated,5m)\",\"size\":0,\"title\":\"TimeSeries on Network Activity for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\"},\"name\":\"query - 0 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkEvents\\r\\n| where isnotempty(RemoteUrl)\\r\\n| summarize count() by RemoteUrl\\r\\n| order by count_ desc\\r\\n| limit 10\",\"size\":0,\"title\":\"Top 10 RemoteUrl accessed over TimeRange {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"name\":\"query - 0 - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"// This query looks for Tor client, or for a common Tor plugin called Meek.\\r\\n// We query for active Tor connections, but could have alternatively looked for active Tor runs (ProcessCreateEvents) or Tor downloads (DeviceFileEvents)\\r\\n// To read more about this technique, see:\\r\\n// Tor: https://attack.mitre.org/wiki/Software/S0183#Techniques_Used\\r\\n// Meek plugin: https://attack.mitre.org/wiki/Software/S0175\\r\\n// Multi-hop proxy technique: https://attack.mitre.org/wiki/Technique/T1188\\r\\n// Tags: #Tor, #MultiHopProxy, #CnC\\r\\nDeviceNetworkEvents  \\r\\n| where Timestamp < ago(3d) and InitiatingProcessFileName in~ (\\\"tor.exe\\\", \\\"meek-client.exe\\\")\\r\\n// Returns MD5 hashes of files used by Tor, to enable you to block them.\\r\\n// We count how prevalent each file is (by machines) and show examples for some of them (up to 5 machine names per hash).\\r\\n| summarize MachineCount=dcount(DeviceName), MachineNames=makeset(DeviceName, 5) by InitiatingProcessMD5\\r\\n| order by MachineCount desc\",\"size\":0,\"title\":\"Tor Clients for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 5\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"Network\"},\"name\":\"groupNetwork\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceFileEvents\\r\\n| summarize FileActivityCount = count() by DeviceName\",\"size\":0,\"title\":\"FileActivityCount per Device for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\"},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceFileEvents\\r\\n| summarize count() by InitiatingProcessAccountUpn\",\"size\":0,\"title\":\"Count by InitiatingProcessAccountUpn for {TimeRange}\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\"},\"name\":\"query - 0 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"File\"},\"name\":\"groupFile\"}],\"fromTemplateId\":\"sentinel-MicrosoftDefenderForEndPoint\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                                "version": "1.0",
                                "sourceId": "[variables('workspaceResourceId')]",
                                "category": "sentinel"
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId2'),'/'))))]",
                            "properties": {
                                "description": "@{workbookKey=MicrosoftDefenderForEndPoint; logoFileName=Azure_Sentinel.svg; description=A wokbook to provide details about Microsoft Defender for Endpoint Advance Hunting to Overview & Analyse data brought through Microsoft Defender XDR Connector.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Microsoft Defender For EndPoint; templateRelativePath=MicrosoftDefenderForEndPoint.json; subtitle=; provider=Microsoft Sentinel Community}.description",
                                "parentId": "[variables('workbookId2')]",
                                "contentId": "[variables('_workbookContentId2')]",
                                "kind": "Workbook",
                                "version": "[variables('workbookVersion2')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('_workbookContentId2')]",
                "contentKind": "Workbook",
                "displayName": "[parameters('workbook2-name')]",
                "contentProductId": "[variables('_workbookcontentProductId2')]",
                "id": "[variables('_workbookcontentProductId2')]",
                "version": "[variables('workbookVersion2')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('workbookTemplateSpecName3')]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "MicrosoftDefenderForIdentity Workbook with template version 3.0.2",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('workbookVersion3')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Insights/workbooks",
                            "name": "[variables('workbookContentId3')]",
                            "location": "[parameters('workspace-location')]",
                            "kind": "shared",
                            "apiVersion": "2021-08-01",
                            "metadata": {
                                "description": "Use this workbook to analyse the advance hunting data ingested for Defender For Identity."
                            },
                            "properties": {
                                "displayName": "[parameters('workbook3-name')]",
                                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Microsoft Defender for Identity\\n---\\n\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"6e647d99-1a32-4bca-8147-403b5d37d773\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"isRequired\":true,\"value\":\"\",\"typeSettings\":{\"includeAll\":false,\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\"},{\"id\":\"d57bcdf5-aec7-4f86-904c-67171864919b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspace\",\"type\":5,\"isRequired\":true,\"query\":\"resources\\r\\n| where type =~ \\\"microsoft.operationalinsights/workspaces\\\"\",\"crossComponentResources\":[\"{Subscription}\"],\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"2e238f92-709c-410b-93e0-60eab6150a75\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":1800000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"ec13514a-7e54-4d41-86db-2805727a2fa7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"About\",\"type\":10,\"description\":\"\",\"isRequired\":true,\"value\":\"Show\",\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    \\\"Show\\\",\\r\\n    \\\"Hide\\\"\\r\\n]\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Microsoft Defender for Identity Analysis Workbook\\r\\n\\r\\n\",\"style\":\"info\"},\"name\":\"text - 0\"}]},\"conditionalVisibility\":{\"parameterName\":\"About\",\"comparison\":\"isEqualTo\",\"value\":\"Show\"},\"name\":\"AboutGroup\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"48578fe1-da47-4a4c-b495-ce7fe24ce495\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Overview\",\"subTarget\":\"grpOverview\",\"style\":\"link\"},{\"id\":\"30e93159-8bf5-4006-820f-406ea10bcd17\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"LogOnEvents\",\"subTarget\":\"grpLogOnEvents\",\"style\":\"link\"},{\"id\":\"c40f76ed-94be-40ff-b65b-3fda306f2c3d\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"QueryEvents\",\"subTarget\":\"grpQueryEvents\",\"style\":\"link\"},{\"id\":\"38c88a53-f7b1-42da-83d6-0c809835eaab\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"DircetoryEvents\",\"subTarget\":\"grpDircetoryEvents\",\"style\":\"link\"},{\"id\":\"0ad83579-c492-4c20-8db6-27883db5abc8\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Alerts\",\"subTarget\":\"grpAlerts\",\"style\":\"link\"}]},\"name\":\"links - 8\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n| summarize count() by LogonType\",\"size\":0,\"title\":\"Log On Summary\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"LogonType\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n|summarize count() by ActionType\",\"size\":0,\"title\":\"Log On Status\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n| summarize count() by Protocol\",\"size\":0,\"title\":\"Log On Protocol\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"barchart\"},\"customWidth\":\"30\",\"name\":\"query - 1 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityQueryEvents\\r\\n| summarize count() by Protocol\",\"size\":0,\"title\":\"Query Summary\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"barchart\"},\"customWidth\":\"30\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityQueryEvents\\r\\n| summarize count() by DestinationPort\",\"size\":0,\"title\":\"Query Destination Port\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 3 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityQueryEvents\\r\\n| where isnotempty(QueryType)\\r\\n| summarize count() by QueryType\\r\\n| order by count_ desc\\r\\n| take 10\",\"size\":0,\"title\":\"Top 10 Query Types\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}]}},\"customWidth\":\"30\",\"name\":\"query - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| summarize count() by Protocol\",\"size\":0,\"title\":\"Directory Events Protocol\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"categoricalbar\"},\"customWidth\":\"40\",\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| summarize count() by AccountDomain\",\"size\":0,\"title\":\"Directory Events Protocol\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 6 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| where isnotempty(AccountUpn)\\r\\n| summarize count() by AccountUpn\\r\\n| order by count_ desc \\r\\n| take 10\",\"size\":0,\"title\":\"Top 10 Accounts Activity\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"30\",\"name\":\"query - 6 - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"grpOverview\"},\"name\":\"grpOverview\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n| where LogonType == \\\"Resource access\\\"\\r\\n| extend FROM_DEVICE_ = tostring(AdditionalFields.[\\\"FROM.DEVICE\\\"])\\r\\n| extend TO_DEVICE_ = tostring(AdditionalFields.[\\\"TO.DEVICE\\\"])\\r\\n| extend Count_ = toint(AdditionalFields.Count)\\r\\n| summarize sum(Count_) by FROM_DEVICE_, TO_DEVICE_\\r\\n| order by sum_Count_ desc\",\"size\":0,\"title\":\"Resource Access Summary in Devices\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"sum_Count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"45\",\"name\":\"query - 0\",\"styleSettings\":{\"margin\":\"5px\",\"padding\":\"5px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n| where LogonType == \\\"Resource access\\\"\\r\\n| extend TargetComputerOperatingSystem_ = tostring(AdditionalFields.TargetComputerOperatingSystem)\\r\\n| extend DestinationComputerOperatingSystem_ = tostring(AdditionalFields.DestinationComputerOperatingSystem)\\r\\n| extend Count_ = toint(AdditionalFields.Count)\\r\\n| summarize sum(Count_) by TargetComputerOperatingSystem_, DestinationComputerOperatingSystem_\\r\\n| order by sum_Count_ desc\",\"size\":0,\"title\":\"Resource Access Summary in OS\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"sum_Count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"45\",\"name\":\"query - 0 - Copy\",\"styleSettings\":{\"margin\":\"5px\",\"padding\":\"5px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n| where LogonType == \\\"Credentials validation\\\"\\r\\n| extend FROM_DEVICE = tostring(AdditionalFields.[\\\"FROM.DEVICE\\\"])\\r\\n| extend TO_DEVICE = tostring(AdditionalFields.[\\\"TO.DEVICE\\\"])\\r\\n| extend Count = toint(AdditionalFields.Count)\\r\\n| summarize sum(Count) by FROM_DEVICE, TO_DEVICE\\r\\n| order by sum_Count desc\",\"size\":0,\"title\":\"Credentials validation Summary in Devices\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"sum_Count\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"45\",\"name\":\"query - 0 - Copy\",\"styleSettings\":{\"margin\":\"5px\",\"padding\":\"5px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = IdentityLogonEvents\\r\\n| where LogonType == \\\"Credentials validation\\\"\\r\\n| extend TO_DEVICE = tostring(AdditionalFields.[\\\"TO.DEVICE\\\"])\\r\\n| extend Count = toint(AdditionalFields.Count);\\r\\ndata\\r\\n| summarize sum(Count) by  TO_DEVICE\\r\\n| order by sum_Count desc\\r\\n| join kind=inner\\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by TO_DEVICE\\r\\n)\\r\\non $left.TO_DEVICE == $right.TO_DEVICE\",\"size\":0,\"title\":\"Credentials validation by Domain Controllers\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"sum_Count\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TO_DEVICE1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"45\",\"name\":\"query - 0 - Copy - Copy\",\"styleSettings\":{\"margin\":\"5px\",\"padding\":\"5px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = IdentityLogonEvents;\\r\\ndata\\r\\n| extend Count = toint(AdditionalFields.Count)\\r\\n| summarize LogonSuccess = sumif(Count,ActionType == \\\"LogonSuccess\\\"),LogonFailed= sumif(Count,ActionType == \\\"LogonFailed\\\") by AccountUpn\\r\\n| join kind = inner\\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by AccountUpn\\r\\n) on $left.AccountUpn == $right.AccountUpn\",\"size\":0,\"title\":\"Logon Summary by Users\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"LogonSuccess\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"LogonFailed\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redPurple\"}},{\"columnMatch\":\"AccountUpn1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 0 - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"grpLogOnEvents\"},\"name\":\"AttachmentGroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = IdentityQueryEvents\\r\\n| extend TO_DEVICE = tostring(AdditionalFields.[\\\"TO.DEVICE\\\"]);\\r\\ndata\\r\\n| summarize count() by QueryType, TO_DEVICE\\r\\n| join kind =inner \\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by QueryType, TO_DEVICE\\r\\n) on $left.QueryType == $right.QueryType and $left.TO_DEVICE== $right.TO_DEVICE\",\"size\":0,\"title\":\"Device Query Summary\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TO_DEVICE\",\"formatter\":5},{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"QueryType1\",\"formatter\":5},{\"columnMatch\":\"TO_DEVICE1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":21,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true,\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"TO_DEVICE\"],\"expandTopLevel\":true}}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = IdentityQueryEvents;\\r\\ndata\\r\\n| summarize count() by DeviceName\\r\\n| join kind =inner \\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by DeviceName\\r\\n) on $left.DeviceName == $right.DeviceName\",\"size\":0,\"title\":\"Query Summary from Source Devices\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"DeviceName1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 0 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"grpQueryEvents\"},\"name\":\"UrlGroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ActionType \",\"size\":0,\"title\":\"Timeline on ActionType\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"timechart\"},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| summarize count() by ActionType \\r\\n| order by count_ desc\",\"size\":0,\"title\":\"Top 10 Actions\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"categoricalbar\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}]},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"DestinationPort\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by AccountUpn\",\"size\":0,\"title\":\"Account Trend on Directory Events\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"DestinationPort\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"query - 0 - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"grpDircetoryEvents\"},\"name\":\"group - 8\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = SecurityAlert\\r\\n| where ProductName == \\\"Azure Advanced Threat Protection\\\"\\r\\n| summarize arg_max(TimeGenerated,*) by SystemAlertId;\\r\\ndata\\r\\n| summarize count() by AlertName\\r\\n| join kind=inner \\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by AlertName\\r\\n) on AlertName\",\"size\":0,\"noDataMessage\":\"Alerts\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"red\"}},{\"columnMatch\":\"AlertName1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":21,\"formatOptions\":{\"palette\":\"red\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = SecurityAlert\\r\\n| where ProductName == \\\"Azure Advanced Threat Protection\\\"\\r\\n| summarize arg_max(TimeGenerated,*) by SystemAlertId\\r\\n| mv-expand todynamic(Entities)\\r\\n| where Entities[\\\"Type\\\"] == \\\"host\\\"\\r\\n| where isnotempty(Entities[\\\"HostName\\\"])\\r\\n| extend HostName = tostring(Entities[\\\"HostName\\\"]);\\r\\ndata\\r\\n| summarize count() by HostName\\r\\n| join kind=inner \\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by HostName\\r\\n) on $left.HostName == $right.HostName\",\"size\":0,\"title\":\"Impacted Hosts\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"red\"}},{\"columnMatch\":\"HostName1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"red\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}]}},\"name\":\"query - 1\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"grpAlerts\"},\"name\":\"group - 8\"}],\"fromTemplateId\":\"sentinel-MicrosoftDefenderForIdentity\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                                "version": "1.0",
                                "sourceId": "[variables('workspaceResourceId')]",
                                "category": "sentinel"
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId3'),'/'))))]",
                            "properties": {
                                "description": "@{workbookKey=MicrosoftDefenderForIdentity; logoFileName=Azure_Sentinel.svg; description=Use this workbook to analyse the advance hunting data ingested for Defender For Identity.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Microsoft Defender For Identity; templateRelativePath=MicrosoftDefenderForIdentity.json; subtitle=; provider=Microsoft Sentinel Community}.description",
                                "parentId": "[variables('workbookId3')]",
                                "contentId": "[variables('_workbookContentId3')]",
                                "kind": "Workbook",
                                "version": "[variables('workbookVersion3')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender XDR",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                },
                                "dependencies": {
                                    "operator": "AND",
                                    "criteria": [
                                        {
                                            "contentId": "IdentityLogonEvents",
                                            "kind": "DataType"
                                        },
                                        {
                                            "contentId": "IdentityQueryEvents",
                                            "kind": "DataType"
                                        },
                                        {
                                            "contentId": "IdentityDirectoryEvents",
                                            "kind": "DataType"
                                        },
                                        {
                                            "contentId": "SecurityAlert",
                                            "kind": "DataType"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('_workbookContentId3')]",
                "contentKind": "Workbook",
                "displayName": "[parameters('workbook3-name')]",
                "contentProductId": "[variables('_workbookcontentProductId3')]",
                "id": "[variables('_workbookcontentProductId3')]",
                "version": "[variables('workbookVersion3')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
            "apiVersion": "2023-04-01-preview",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "version": "3.0.2",
                "kind": "Solution",
                "contentSchemaVersion": "3.0.0",
                "displayName": "Microsoft Defender XDR",
                "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
                "descriptionHtml": "<p><strong>Note:</strong> <em>There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</em></p>\n<p>The <a href=\"https://www.microsoft.com/security/business/threat-protection/microsoft-365-defender\">Microsoft Defender XDR</a> solution for Microsoft Sentinel enables you to ingest Security Alerts/Incidents and raw logs from the products within Microsoft Defender XDR suite into Microsoft Sentinel.</p>\n<p>Additional Hunting Queries to support proactive and reactive hunting for the Microsoft Defender XDR solution can be found on <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Hunting%20Queries/Microsoft%20365%20Defender\">GitHub</a>. This repository has a collection of queries developed by Microsoft Security Research and Microsoft Sentinel community contributions.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><a href=\"https://docs.microsoft.com/azure/azure-monitor/logs/data-collector-api\">Azure Monitor HTTP Data Collector API</a></li>\n</ol>\n<p><strong>Data Connectors:</strong> 1, <strong>Workbooks:</strong> 3, <strong>Analytic Rules:</strong> 10, <strong>Hunting Queries:</strong> 4</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
                "contentKind": "Solution",
                "contentProductId": "[variables('_solutioncontentProductId')]",
                "id": "[variables('_solutioncontentProductId')]",
                "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\" width=\"75px\" height=\"75px\">",
                "contentId": "[variables('_solutionId')]",
                "parentId": "[variables('_solutionId')]",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Defender XDR",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft",
                    "email": "[variables('_email')]"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                },
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "kind": "DataConnector",
                            "contentId": "[variables('_dataConnectorContentId1')]",
                            "version": "[variables('dataConnectorVersion1')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                            "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                            "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                            "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                            "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                            "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                            "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                            "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                            "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                            "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                            "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                            "version": "[variables('huntingQueryObject1').huntingQueryVersion1]"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
                            "version": "[variables('huntingQueryObject2').huntingQueryVersion2]"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
                            "version": "[variables('huntingQueryObject3').huntingQueryVersion3]"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
                            "version": "[variables('huntingQueryObject4').huntingQueryVersion4]"
                        },
                        {
                            "kind": "Workbook",
                            "contentId": "[variables('_workbookContentId1')]",
                            "version": "[variables('workbookVersion1')]"
                        },
                        {
                            "kind": "Workbook",
                            "contentId": "[variables('_workbookContentId2')]",
                            "version": "[variables('workbookVersion2')]"
                        },
                        {
                            "kind": "Workbook",
                            "contentId": "[variables('_workbookContentId3')]",
                            "version": "[variables('workbookVersion3')]"
                        }
                    ]
                },
                "firstPublishDate": "2022-05-02",
                "providers": [
                    "Microsoft"
                ],
                "categories": {
                    "domains": [
                        "Security - Threat Protection"
                    ]
                }
            },
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
        }
    ],
    "outputs": {}
}
